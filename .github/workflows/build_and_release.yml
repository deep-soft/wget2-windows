name: "Build and Release"

on:
  workflow_dispatch:
  push:
    branches:
      - "*"
  pull_request:
    branches:
      - "*"
  release:
    types:
      - released
  schedule:
    - cron: "0 0 * * *"

jobs:
  build_wget2:
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: actions/cache@v4
        id: cache
        with:
          path: downloads/
          key: build-cache-x86_64-w64-mingw32-${{ github.sha }}
          restore-keys: |
            build-cache-x86_64-w64-mingw32-
      - name: Install prerequisites
        run: |
          sudo apt-get update
          #DEBIAN_FRONTEND=noninteractive sudo apt-get upgrade -y
          sudo apt-get install -y --no-install-recommends \
            autopoint \
            automake \
            cmake \
            ca-certificates \
            gettext \
            gperf \
            jq \
            libtool \
            lzip \
            make \
            mingw-w64 \
            ninja-build \
            pkg-config \
            retry \
            python3 \
            python3-venv
          #sudo apt-get install -y autopoint mingw-w64 mingw-w64-tools gcc jq ninja-build retry lzip
          #sudo apt-get install -y make cmake m4 pkg-config automake gettext gperf python3-venv
          #python3 -m venv myenv
          #source myenv/bin/activate
          #pip install setuptools
          #pip install --upgrade setuptools
      - name: Compile
        env:
          CROSS_HOST: "x86_64-w64-mingw32"
        run: |
          chmod +x "${GITHUB_WORKSPACE}/build.sh"
          "${GITHUB_WORKSPACE}/build.sh"
      - name: Archive wget2.exe
        uses: actions/upload-artifact@v4
        with:
          name: wget2.exe
          path: "wget2.exe"
      - name: Get version number
        run: |
          VERSION="$(retry wget -qO- --compression=auto https://api.github.com/repos/rockdaboot/wget2/releases | jq -r '.[0].tag_name | sub("^v"; "")')" 
          echo "wget2_VERSION=${VERSION}" >> $GITHUB_ENV
      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          tag: wget2-${{ env.wget2_VERSION }}
          allowUpdates: true
          artifacts: "wget2.exe"
          bodyFile: "RELEASE.md"
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: update README.md
        run: |
          cat RELEASE.md > README.md
          git config --local user.email "actions@github.com"
          git config --local user.name "GitHub Actions"
          git add .
          git commit -m "更新 README 文件"
          git push
